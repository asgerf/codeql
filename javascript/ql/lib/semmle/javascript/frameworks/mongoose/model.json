{
    "packages": {
        "mongodb": "4.5.0",
        "mongoose": "6.3.5"
    },
    "resolutions": {
        "base64-js": "1.5.1",
        "bson": "4.6.4",
        "buffer": "5.7.1",
        "denque": "2.0.1",
        "ieee754": "1.2.1",
        "sift": "16.0.0",
        "smart-buffer": "4.2.0",
        "socks": "2.6.2"
    },
    "language": "javascript",
    "model": {
        "replaceTypeParameters": [
            "mongoose;Document;-1;mongoose;Document",
            "mongoose;Query;0;mongoose;Document",
            "mongoose;Query;1;mongoose;Document",
            "mongoose;Cursor;0;mongoose;Document",
            "mongoose;SchemaTypeOptions;-1;mongoose;SchemaTypeOptions",
            "mongoose;SchemaType;-1;mongoose;SchemaType"
        ],
        "sinks": [
            "mongoose;CollectionBase;Member[findAndModify].Argument[0];nosql-injection",
            "mongoose;Model;Member[find,findOne,findOneAndDelete,findOneAndRemove,findOneAndReplace,findOneAndUpdate].Argument[0];nosql-injection",
            "mongoose;Query;Member[find,findOne,findOneAndDelete,findOneAndRemove,findOneAndUpdate].Argument[0];nosql-injection",
            "mongoose;RootQuerySelector;Member[$and,$nor,$or];nosql-injection"
        ]
    },
    "generatedModel": {
        "//": "Autogenerated section. Manual edits in here will be lost.",
        "typeDefinitions": [
            "mongoose;AcceptsDiscriminator;mongoose;Model;",
            "mongoose;AcceptsDiscriminator;mongoose;Schema.Types.Array;",
            "mongoose;AcceptsDiscriminator;mongoose;Schema.Types.DocumentArray;",
            "mongoose;AcceptsDiscriminator;mongoose;Schema.Types.Subdocument;",
            "mongoose;Aggregate;mongoose;Aggregate;Member[addCursorFlag,addFields,allowDiskUse,append,collation,count,facet,graphLookup,group,hint,limit,lookup,match,model,near,option,project,read,readConcern,redact,replaceRoot,sample,search,session,skip,sort,sortByCount,unionWith,unwind].ReturnValue",
            "mongoose;Aggregate;mongoose;AggregateStatic;Instance",
            "mongoose;Aggregate;mongoose;Model;Member[aggregate].ReturnValue",
            "mongoose;Collection;mongoose;Collection;Instance",
            "mongoose;Collection;mongoose;Connection;Member[collection].ReturnValue",
            "mongoose;Collection;mongoose;Document;Member[collection]",
            "mongoose;Collection;mongoose;Model;Member[collection]",
            "mongoose;CollectionBase;mongoose;Collection;",
            "mongoose;CompileModelOptions;mongoose;;Member[model].Argument[3]",
            "mongoose;CompileModelOptions;mongoose;Connection;Member[model].Argument[3]",
            "mongoose;Connection;mongoose;Collection;Argument[1]",
            "mongoose;Connection;mongoose;CollectionBase;Member[conn]",
            "mongoose;Connection;mongoose;CompileModelOptions;Member[connection]",
            "mongoose;Connection;mongoose;Connection;Member[asPromise].ReturnValue.Awaited",
            "mongoose;Connection;mongoose;Connection;Member[deleteModel,plugin,setClient,useDb].ReturnValue",
            "mongoose;Connection;mongoose;Connection;Member[openUri].Argument[2].Argument[1]",
            "mongoose;Connection;mongoose;Connection;Member[openUri].WithArity[1..2].ReturnValue.Awaited",
            "mongoose;Connection;mongoose;Connection;Member[openUri].WithArity[2,3].ReturnValue",
            "mongoose;Connection;mongoose;Connection;Member[openUri].WithArity[2].Argument[1].Argument[1]",
            "mongoose;Connection;mongoose;ConnectionStatic;Instance",
            "mongoose;Connection;mongoose;Document;Member[db]",
            "mongoose;Connection;mongoose;Model;Member[db]",
            "mongoose;Cursor;mongoose;Aggregate;Member[cursor].ReturnValue",
            "mongoose;Cursor;mongoose;Cursor;Member[addCursorFlag,map].ReturnValue",
            "mongoose;Cursor;mongoose;CursorStatic;Instance",
            "mongoose;Cursor;mongoose;Query;Member[cursor].ReturnValue",
            "mongoose;Document;mongoose;Cursor;Member[eachAsync].WithArity[3].Argument[0].Argument[0].ArrayElement",
            "mongoose;Document;mongoose;Document;Member[$getAllSubdocs,$getPopulatedDocs].ReturnValue.ArrayElement",
            "mongoose;Document;mongoose;Document;Member[$parent,$set].ReturnValue",
            "mongoose;Document;mongoose;Document;Member[equals].Argument[0]",
            "mongoose;Document;mongoose;DocumentStatic;Instance",
            "mongoose;Document;mongoose;Error.VersionErrorStatic;Argument[0]",
            "mongoose;Document;mongoose;Model;Member[bulkSave].Argument[0].ArrayElement",
            "mongoose;Document;mongoose;Query;Member[exec].Argument[0].Argument[1]",
            "mongoose;Document;mongoose;Query;Member[find].Argument[3].Argument[1].ArrayElement",
            "mongoose;Document;mongoose;SchemaType;Member[cast].Argument[1]",
            "mongoose;Document;mongoose;Types.Subdocument;",
            "mongoose;Document;mongoose;Types.Subdocument;Member[$parent,ownerDocument,parent].ReturnValue",
            "mongoose;Document;mongoose;VirtualType;Member[applyGetters,applySetters].Argument[1]",
            "mongoose;FilterQuery;mongoose;Model;Member[countDocuments].WithArity[1..3].Argument[0]",
            "mongoose;FilterQuery;mongoose;Model;Member[count].WithArity[1..2].Argument[0]",
            "mongoose;FilterQuery;mongoose;Model;Member[deleteMany,deleteOne].WithArity[0..3,2].Argument[0]",
            "mongoose;FilterQuery;mongoose;Model;Member[distinct].Argument[1]",
            "mongoose;FilterQuery;mongoose;Model;Member[exists,findOne,findOneAndDelete,findOneAndRemove,findOneAndReplace,findOneAndUpdate,geoSearch,replaceOne,update,updateMany,updateOne].Argument[0]",
            "mongoose;FilterQuery;mongoose;Model;Member[find].WithArity[1..2,1..3,1..4].Argument[0]",
            "mongoose;FilterQuery;mongoose;Query;Member[and,nor,or].Argument[0].ArrayElement",
            "mongoose;FilterQuery;mongoose;Query;Member[countDocuments].WithArity[1..3].Argument[0]",
            "mongoose;FilterQuery;mongoose;Query;Member[count].WithArity[1..2].Argument[0]",
            "mongoose;FilterQuery;mongoose;Query;Member[deleteMany,deleteOne].WithArity[0..3,2].Argument[0]",
            "mongoose;FilterQuery;mongoose;Query;Member[distinct].Argument[1]",
            "mongoose;FilterQuery;mongoose;Query;Member[findOne,findOneAndDelete,findOneAndRemove,findOneAndUpdate,merge,remove,replaceOne,setQuery,update,updateMany,updateOne].Argument[0]",
            "mongoose;FilterQuery;mongoose;Query;Member[find].WithArity[1..2,1..3,1..4].Argument[0]",
            "mongoose;FilterQuery;mongoose;Query;Member[getFilter,getQuery].ReturnValue",
            "mongoose;FilterQuery;mongoose;RootQuerySelector;Member[$and,$nor,$or].ArrayElement",
            "mongoose;FilterQuery;mongoose;VirtualTypeOptions;Member[match]",
            "mongoose;InsertManyOptions;mongoose;Model;Member[insertMany].WithArity[1..2,1..3,2].Argument[1]",
            "mongoose;MixedSchemaTypeOptions;mongoose;SchemaDefinitionProperty;",
            "mongoose;Model;mongoose;;Member[model].ReturnValue",
            "mongoose;Model;mongoose;AcceptsDiscriminator;Member[discriminator].WithArity[2..3].ReturnValue",
            "mongoose;Model;mongoose;Aggregate;Member[model].Argument[0]",
            "mongoose;Model;mongoose;Connection;Member[model].WithArity[1..4].ReturnValue",
            "mongoose;Model;mongoose;Document;Member[$model].ReturnValue",
            "mongoose;Model;mongoose;Document;Member[populate].Argument[2]",
            "mongoose;Model;mongoose;PopulateOptions;Member[model]",
            "mongoose;Model;mongoose;Query;Member[cast].Argument[0]",
            "mongoose;Model;mongoose;Query;Member[populate].Argument[2]",
            "mongoose;Model;mongoose;Schema.Types.Array;Member[discriminator].WithArity[2..3].ReturnValue",
            "mongoose;Model;mongoose;Schema.Types.DocumentArray;Member[discriminator].WithArity[2..3].ReturnValue",
            "mongoose;Model;mongoose;Schema.Types.Subdocument;Member[discriminator].WithArity[2..3].ReturnValue",
            "mongoose;Model;mongoose;SchemaType;Member[ref].Argument[0]",
            "mongoose;Model;mongoose;SchemaTypeOptions;Member[ref]",
            "mongoose;Model;mongoose;SchemaTypeOptions;Member[ref].ReturnValue",
            "mongoose;MongooseQueryOptions;mongoose;Query;Member[_mongooseOptions]",
            "mongoose;MongooseQueryOptions;mongoose;Query;Member[mongooseOptions].Argument[0]",
            "mongoose;MongooseQueryOptions;mongoose;Query;Member[mongooseOptions].ReturnValue",
            "mongoose;ObjectId;mongoose;AcceptsDiscriminator;Member[discriminator].Argument[2]",
            "mongoose;PopulateOption;mongoose;InsertManyOptions;",
            "mongoose;PopulateOption;mongoose;QueryOptions;",
            "mongoose;PopulateOptions;mongoose;Document;Member[populate].Argument[4]",
            "mongoose;PopulateOptions;mongoose;Document;Member[populate].WithArity[1,2].Argument[0]",
            "mongoose;PopulateOptions;mongoose;Document;Member[populate].WithArity[1,2].Argument[0].ArrayElement",
            "mongoose;PopulateOptions;mongoose;Model;Member[populate].Argument[1]",
            "mongoose;PopulateOptions;mongoose;Model;Member[populate].Argument[1].ArrayElement",
            "mongoose;PopulateOptions;mongoose;PopulateOption;Member[populate]",
            "mongoose;PopulateOptions;mongoose;PopulateOption;Member[populate].ArrayElement",
            "mongoose;PopulateOptions;mongoose;PopulateOptions;Member[populate]",
            "mongoose;PopulateOptions;mongoose;PopulateOptions;Member[populate].ArrayElement",
            "mongoose;PopulateOptions;mongoose;Query;Member[populate].WithArity[1].Argument[0]",
            "mongoose;PopulateOptions;mongoose;Query;Member[populate].WithArity[1].Argument[0].ArrayElement",
            "mongoose;Query;mongoose;Document;Member[replaceOne,update,updateOne].ReturnValue",
            "mongoose;Query;mongoose;Query;Member[all,allowDiskUse,and,batchSize,box,circle,clone,collation,comment,elemMatch,equals,exists,explain,geometry,gt,gte,hint,in,intersects,j,limit,lt,lte,maxDistance,maxScan,maxTimeMS,merge,mod,ne,near,nin,nor,or,polygon,read,readConcern,regex,remove,select,session,set,setOptions,size,skip,slice,snapshot,sort,tailable,w,where,within,wtimeout].ReturnValue",
            "mongoose;Query;mongoose;Query;Member[error].WithArity[1].ReturnValue",
            "mongoose;Query;mongoose;Query;Member[merge].Argument[0]",
            "mongoose;Query;mongoose;QueryStatic;Instance",
            "mongoose;Query;mongoose;QueryWithHelpers;",
            "mongoose;QueryOptions;mongoose;Document;Member[delete,deleteOne,remove].WithArity[0..1,2].Argument[0]",
            "mongoose;QueryOptions;mongoose;Document;Member[replaceOne,update,updateOne].Argument[1]",
            "mongoose;QueryOptions;mongoose;Model;Member[countDocuments,findByIdAndDelete,findByIdAndRemove,findOneAndDelete,findOneAndRemove].Argument[1]",
            "mongoose;QueryOptions;mongoose;Model;Member[deleteMany,deleteOne].WithArity[0..3].Argument[1]",
            "mongoose;QueryOptions;mongoose;Model;Member[estimatedDocumentCount].Argument[0]",
            "mongoose;QueryOptions;mongoose;Model;Member[find,replaceOne,update,updateMany,updateOne].Argument[2]",
            "mongoose;QueryOptions;mongoose;Model;Member[findByIdAndUpdate,findOneAndReplace,findOneAndUpdate].WithArity[0..4,3..4].Argument[2]",
            "mongoose;QueryOptions;mongoose;Model;Member[findById].WithArity[1..4].Argument[2]",
            "mongoose;QueryOptions;mongoose;Model;Member[findOne].WithArity[0..4].Argument[2]",
            "mongoose;QueryOptions;mongoose;PopulateOptions;Member[options]",
            "mongoose;QueryOptions;mongoose;Query;Member[countDocuments,findByIdAndDelete,findOneAndDelete,findOneAndRemove].Argument[1]",
            "mongoose;QueryOptions;mongoose;Query;Member[cursor,estimatedDocumentCount,setOptions].Argument[0]",
            "mongoose;QueryOptions;mongoose;Query;Member[cursor].ReturnValue.Member[options]",
            "mongoose;QueryOptions;mongoose;Query;Member[deleteMany,deleteOne].WithArity[0..3].Argument[1]",
            "mongoose;QueryOptions;mongoose;Query;Member[findByIdAndUpdate,findOneAndUpdate].WithArity[0..4,3..4].Argument[2]",
            "mongoose;QueryOptions;mongoose;Query;Member[findOne].WithArity[0..4].Argument[2]",
            "mongoose;QueryOptions;mongoose;Query;Member[find].WithArity[1..4].Argument[2]",
            "mongoose;QueryOptions;mongoose;Query;Member[getOptions].ReturnValue",
            "mongoose;QueryOptions;mongoose;Query;Member[replaceOne,update,updateMany,updateOne].Argument[2]",
            "mongoose;QueryOptions;mongoose;VirtualTypeOptions;Member[options]",
            "mongoose;QueryWithHelpers;mongoose;Document;Member[delete,deleteOne].WithArity[0..1].ReturnValue",
            "mongoose;QueryWithHelpers;mongoose;Model;Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,exists,find,findById,findByIdAndDelete,findByIdAndRemove,findOne,findOneAndDelete,findOneAndRemove,findOneAndReplace,geoSearch,remove,replaceOne,update,updateMany,updateOne,where].ReturnValue",
            "mongoose;QueryWithHelpers;mongoose;Model;Member[findByIdAndUpdate].WithArity[0..4,3,3..4].ReturnValue",
            "mongoose;QueryWithHelpers;mongoose;Model;Member[findOneAndUpdate].WithArity[0..4,3..4].ReturnValue",
            "mongoose;QueryWithHelpers;mongoose;Query;Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,find,findByIdAndDelete,findOne,findOneAndDelete,findOneAndRemove,lean,orFail,populate,replaceOne,transform,update,updateMany,updateOne].ReturnValue",
            "mongoose;QueryWithHelpers;mongoose;Query;Member[findByIdAndUpdate].WithArity[0..4,3,3..4].ReturnValue",
            "mongoose;QueryWithHelpers;mongoose;Query;Member[findOneAndUpdate].WithArity[0..4,3..4].ReturnValue",
            "mongoose;QueryWithHelpers;mongoose;Query;Member[toConstructor].ReturnValue.Instance",
            "mongoose;RootQuerySelector;mongoose;_FilterQuery;",
            "mongoose;Schema.Types.Array;mongoose;Schema.Types.Array;Member[enum].ReturnValue",
            "mongoose;Schema.Types.Array;mongoose;Schema.Types.ArrayStatic;Instance",
            "mongoose;Schema.Types.Boolean;mongoose;Schema.Types.BooleanStatic;Instance",
            "mongoose;Schema.Types.BooleanStatic;mongoose;BooleanSchemaDefinition;",
            "mongoose;Schema.Types.Buffer;mongoose;Schema.Types.Buffer;Member[subtype].ReturnValue",
            "mongoose;Schema.Types.Buffer;mongoose;Schema.Types.BufferStatic;Instance",
            "mongoose;Schema.Types.BufferStatic;mongoose;RefType;",
            "mongoose;Schema.Types.Date;mongoose;Date;",
            "mongoose;Schema.Types.Date;mongoose;Schema.Types.Date;Member[expires,max,min].ReturnValue",
            "mongoose;Schema.Types.Date;mongoose;Schema.Types.DateStatic;Instance",
            "mongoose;Schema.Types.DateStatic;mongoose;DateSchemaDefinition;",
            "mongoose;Schema.Types.Decimal128;mongoose;Decimal128;",
            "mongoose;Schema.Types.Decimal128;mongoose;Schema.Types.Decimal128Static;Instance",
            "mongoose;Schema.Types.DocumentArray;mongoose;Schema.Types.DocumentArrayStatic;Instance",
            "mongoose;Schema.Types.Map;mongoose;Schema.Types.MapStatic;Instance",
            "mongoose;Schema.Types.Mixed;mongoose;Mixed;",
            "mongoose;Schema.Types.Mixed;mongoose;Schema.Types.MixedStatic;Instance",
            "mongoose;Schema.Types.MixedStatic;mongoose;MixedSchemaTypeOptions;Member[type]",
            "mongoose;Schema.Types.MixedStatic;mongoose;SchemaDefinitionProperty;",
            "mongoose;Schema.Types.Number;mongoose;Number;",
            "mongoose;Schema.Types.Number;mongoose;Schema.Types.Number;Member[enum,max,min].ReturnValue",
            "mongoose;Schema.Types.Number;mongoose;Schema.Types.NumberStatic;Instance",
            "mongoose;Schema.Types.NumberStatic;mongoose;NumberSchemaDefinition;",
            "mongoose;Schema.Types.NumberStatic;mongoose;RefType;",
            "mongoose;Schema.Types.ObjectId;mongoose;ObjectId;",
            "mongoose;Schema.Types.ObjectId;mongoose;Schema.Types.ObjectId;Member[auto].ReturnValue",
            "mongoose;Schema.Types.ObjectId;mongoose;Schema.Types.ObjectIdStatic;Instance",
            "mongoose;Schema.Types.ObjectIdStatic;mongoose;ObjectIdSchemaDefinition;",
            "mongoose;Schema.Types.ObjectIdStatic;mongoose;RefType;",
            "mongoose;Schema.Types.String;mongoose;Schema.Types.String;Member[enum,lowercase,match,maxlength,minlength,trim,uppercase].ReturnValue",
            "mongoose;Schema.Types.String;mongoose;Schema.Types.StringStatic;Instance",
            "mongoose;Schema.Types.StringStatic;mongoose;RefType;",
            "mongoose;Schema.Types.StringStatic;mongoose;StringSchemaDefinition;",
            "mongoose;Schema.Types.Subdocument;mongoose;Schema.Types.SubdocumentStatic;Instance",
            "mongoose;Schema.Types.SubdocumentStatic;mongoose;Schema.Types.DocumentArray;Member[caster]",
            "mongoose;Schema;mongoose;;Member[model].Argument[1]",
            "mongoose;Schema;mongoose;;Member[plugin].Argument[0].Argument[0]",
            "mongoose;Schema;mongoose;AcceptsDiscriminator;Member[discriminator].WithArity[2..3].Argument[1]",
            "mongoose;Schema;mongoose;Connection;Member[model].WithArity[1..4].Argument[1]",
            "mongoose;Schema;mongoose;Connection;Member[plugin].Argument[0].Argument[0]",
            "mongoose;Schema;mongoose;Document;Member[schema]",
            "mongoose;Schema;mongoose;Model;Member[schema]",
            "mongoose;Schema;mongoose;Schema.Types.Array;Member[discriminator].WithArity[2..3].Argument[1]",
            "mongoose;Schema;mongoose;Schema.Types.DocumentArray;Member[discriminator].WithArity[2..3].Argument[1]",
            "mongoose;Schema;mongoose;Schema.Types.DocumentArray;Member[schema]",
            "mongoose;Schema;mongoose;Schema.Types.Subdocument;Member[discriminator].WithArity[2..3].Argument[1]",
            "mongoose;Schema;mongoose;Schema.Types.Subdocument;Member[schema]",
            "mongoose;Schema;mongoose;Schema;Member[add,clearIndexes,clone,eachPath,index,loadClass,method,pick,plugin,post,pre,queue,remove,set,static].ReturnValue",
            "mongoose;Schema;mongoose;Schema;Member[add].Argument[0]",
            "mongoose;Schema;mongoose;Schema;Member[childSchemas].ArrayElement.Member[schema]",
            "mongoose;Schema;mongoose;Schema;Member[path].WithArity[2].ReturnValue",
            "mongoose;Schema;mongoose;Schema;Member[plugin].Argument[0].Argument[0]",
            "mongoose;Schema;mongoose;SchemaDefinitionProperty;",
            "mongoose;Schema;mongoose;SchemaDefinitionProperty;ArrayElement",
            "mongoose;Schema;mongoose;SchemaStatic;Instance",
            "mongoose;Schema;mongoose;SchemaType;Member[schema]",
            "mongoose;SchemaDefinitionProperty;mongoose;SchemaTypeOptions;Member[of]",
            "mongoose;SchemaStatic;mongoose;;Member[Schema]",
            "mongoose;SchemaType;mongoose;Error.CastErrorStatic;Argument[4]",
            "mongoose;SchemaType;mongoose;Error.SyncIndexesErrorStatic;Argument[4]",
            "mongoose;SchemaType;mongoose;Schema.Types.Array;",
            "mongoose;SchemaType;mongoose;Schema.Types.Array;Member[caster]",
            "mongoose;SchemaType;mongoose;Schema.Types.Boolean;",
            "mongoose;SchemaType;mongoose;Schema.Types.Buffer;",
            "mongoose;SchemaType;mongoose;Schema.Types.Date;",
            "mongoose;SchemaType;mongoose;Schema.Types.Decimal128;",
            "mongoose;SchemaType;mongoose;Schema.Types.DocumentArray;",
            "mongoose;SchemaType;mongoose;Schema.Types.Map;",
            "mongoose;SchemaType;mongoose;Schema.Types.Mixed;",
            "mongoose;SchemaType;mongoose;Schema.Types.Number;",
            "mongoose;SchemaType;mongoose;Schema.Types.ObjectId;",
            "mongoose;SchemaType;mongoose;Schema.Types.String;",
            "mongoose;SchemaType;mongoose;Schema.Types.Subdocument;",
            "mongoose;SchemaType;mongoose;Schema;Member[eachPath].Argument[0].Argument[1]",
            "mongoose;SchemaType;mongoose;Schema;Member[path].WithArity[1].ReturnValue",
            "mongoose;SchemaType;mongoose;SchemaType;Member[get].ReturnValue",
            "mongoose;SchemaType;mongoose;SchemaTypeStatic;Instance",
            "mongoose;SchemaTypeOptions;mongoose;MixedSchemaTypeOptions;",
            "mongoose;SchemaTypeOptions;mongoose;SchemaDefinitionProperty;",
            "mongoose;SchemaTypeOptions;mongoose;SchemaDefinitionProperty;ArrayElement",
            "mongoose;SchemaTypeOptions;mongoose;SchemaType;Member[OptionsConstructor]",
            "mongoose;SchemaTypeOptions;mongoose;SchemaTypeOptions;Member[get].Argument[1]",
            "mongoose;SchemaTypeOptions;mongoose;SchemaTypeOptionsStatic;Instance",
            "mongoose;SchemaTypeStatic;mongoose;SchemaDefinitionProperty;",
            "mongoose;Types.ArraySubdocument;mongoose;Types.ArraySubdocumentStatic;Instance",
            "mongoose;Types.Subdocument;mongoose;Types.ArraySubdocument;",
            "mongoose;Types.Subdocument;mongoose;Types.SubdocumentStatic;Instance",
            "mongoose;VirtualType;mongoose;Schema;Member[virtual,virtualpath].ReturnValue",
            "mongoose;VirtualType;mongoose;VirtualType;Member[get,set].Argument[0].Argument[1]",
            "mongoose;VirtualType;mongoose;VirtualType;Member[get,set].ReturnValue",
            "mongoose;VirtualType;mongoose;VirtualTypeStatic;Instance",
            "mongoose;VirtualTypeOptions;mongoose;Schema;Member[virtual].Argument[1]",
            "mongoose;VirtualTypeStatic;mongoose;;Member[VirtualType]",
            "mongoose;_FilterQuery;mongoose;FilterQuery;"
        ]
    }
}
